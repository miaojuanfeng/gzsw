<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="gz.sw.mapper.write.DischargeDao">
    <select id="selectCount" resultType="java.lang.Integer">
        select
        	count(d.id)
        from discharge d
        left join station s on d.stcd = s.stcd
        left join sttype t on s.type = t.code
        where 1=1
        <if test="sttp != null and sttp != ''" >
            and t.code = #{sttp}
        </if>
        <if test="stcd != null and stcd != ''" >
            and s.stcd = #{stcd}
        </if>
    </select>
    <select id="selectList" resultType="java.util.Map">
        select d1.id, CONVERT(varchar(100), d1.create_time, 20) as createTime, s.stname, t.name as sttype
        from discharge d1
        left join station s on d1.stcd = s.stcd
        left join sttype t on s.type = t.code,
        (select TOP ${page*limit} row_number() OVER (order by d.id desc, d.ID desc) n, d.ID
        from discharge d
        left join station s on d.stcd = s.stcd
        left join sttype t on s.type = t.code
        where 1=1
        <if test="sttp != null and sttp != ''" >
            and t.code = #{sttp}
        </if>
        <if test="stcd != null and stcd != ''" >
            and s.stcd = #{stcd}
        </if>
        ) d2
        where 1=1
        and d1.id = d2.id
        and d2.n > ${(page-1)*limit}
        order by d2.n asc
    </select>
    <select id="selectListByStcd" resultType="java.util.Map">
        select
        	dp.id, dp.z0, dp.hcoq
        from discharge_point dp
        left join discharge d on dp.lid = d.id
        where d.stcd = #{stcd}
        order by dp.id asc
    </select>
    <select id="selectPointList" resultType="java.util.Map">
        select
        	id, z0, hcoq
        from discharge_point
        where lid = #{lid}
        order by id asc
    </select>
    <select id="select" resultType="gz.sw.entity.write.Discharge">
        select * from discharge
        where id = #{id}
    </select>
    <insert id="insert" parameterType="gz.sw.entity.write.Discharge" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into discharge(stcd, create_time) values(#{stcd}, #{createTime})
    </insert>
    <update id="update" parameterType="gz.sw.entity.write.Discharge">
        update discharge
        <set>
            <if test="stcd != null" > stcd = #{stcd},</if>
        </set>
        where id = #{id}
    </update>
    <delete id="delete" parameterType="java.lang.Integer">
        delete from discharge where id = #{id}
    </delete>
    <delete id="deletePoint" parameterType="java.lang.Integer">
        delete from discharge_point where lid = #{lid}
    </delete>
    <insert id="insertPointBatch" parameterType="java.util.List">
        insert into discharge_point
        (lid, z0, hcoq)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.lid},#{item.z0},#{item.hcoq})
        </foreach>
    </insert>
</mapper>