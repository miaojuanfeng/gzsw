<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="gz.sw.mapper.write.RainfDao">
    <select id="selectCount" resultType="java.lang.Integer">
        select
        	count(r.id)
        from rainf r
        left join station s on r.stcd = s.stcd
        left join sttype t on s.type = t.code
        where 1=1
        <if test="sttp != null and sttp != ''" >
            and t.code = #{sttp}
        </if>
        <if test="stcd != null and stcd != ''" >
            and s.stcd = #{stcd}
        </if>
        <if test="name != null and name != ''" >
            and r.name like '%' + #{name} + '%'
        </if>
    </select>
    <select id="selectList" resultType="java.util.Map">
        select r1.id, r1.name, CONVERT(varchar(100), r1.create_time, 20) as createTime, s.stname, t.name as sttype
        from rainf r1
        left join station s on r1.stcd = s.stcd
        left join sttype t on s.type = t.code,
        (select TOP ${page*limit} row_number() OVER (order by r.id desc, r.ID desc) n, r.ID
        from rainf r
        left join station s on r.stcd = s.stcd
        left join sttype t on s.type = t.code
        where 1=1
        <if test="sttp != null and sttp != ''" >
            and t.code = #{sttp}
        </if>
        <if test="stcd != null and stcd != ''" >
            and s.stcd = #{stcd}
        </if>
        <if test="name != null and name != ''" >
            and r.name like '%' + #{name} + '%'
        </if>
        ) r2
        where 1=1
        and r1.id = r2.id
        and r2.n > ${(page-1)*limit}
        order by r2.n asc
    </select>
    <select id="selectMap" resultType="java.util.Map">
        select r.*, rtrim(s.type) as sttype, rtrim(s.stcd) as stcd
        from rainf r
        left join station s on r.stcd = s.stcd
        where r.id = #{id}
    </select>
    <select id="selectListByStcd" resultType="java.util.Map">
        select
        	id, name, stcd
        from rainf
        where stcd = #{stcd}
        order by id desc
    </select>
    <select id="selectRainfPoint" resultType="java.util.Map">
        select
        	rs.stid
        from rainf_station rs
        where rs.rainf = #{rainf}
        order by rs.id asc
    </select>
    <insert id="insert" parameterType="gz.sw.entity.write.Rainf" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into rainf
        (stcd, name, create_user, create_time)
        values
        (#{stcd},#{name},#{createUser},#{createTime})
    </insert>
    <insert id="insertPointList" parameterType="java.util.Map">
        insert into rainf_station
        (rainf, stid)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.rainf},#{item.stid})
        </foreach>
    </insert>
    <insert id="insertPointBatch" parameterType="gz.sw.entity.write.RainfPoint">
        insert into rainf_station
        (rainf, stid, weight)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.rainf},#{item.stid},#{item.weight})
        </foreach>
    </insert>
    <update id="update" parameterType="gz.sw.entity.write.Rainf">
        update rainf
        <set>
            <if test="stcd != null" >stcd = #{stcd},</if>
            <if test="name != null" >name = #{name},</if>
        </set>
        where id = #{id}
    </update>
    <delete id="delete">
        delete from rainf where id = #{id}
    </delete>
    <delete id="deleteListById">
        delete from rainf_station where rainf = #{id}
    </delete>
</mapper>